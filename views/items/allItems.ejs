<% layout('layout/boilerplate') %>

    <div class="container py-4">

        <!-- Header -->
        <div class="text-center mb-5">
            <h1 class="fw-bold mb-2 text-primary">Refractories & Consumables</h1>
            <p class="text-muted fs-5">Smart inventory management made simple</p>
        </div>

        <!-- 🔍 Search & Filters -->
        <div class="bg-white p-4 rounded-4 shadow-sm mb-5">
            <div class="row g-3 align-items-center">
                <!-- Search -->
                <div class="col-lg-6">
                    <form action="/items/search" method="get" id="itemSearchForm" class="position-relative">
                        <div class="input-group shadow-sm rounded-pill overflow-hidden">
                            <span class="input-group-text bg-white border-0 ps-3">
              <i class="bi bi-search text-muted fs-5"></i>
            </span>
                            <input type="search" id="itemSearch" name="item[itemName]" class="form-control border-0" placeholder="Search by item, category, supplier or description..." autocomplete="off" />
                        </div>
                    </form>

                    <!-- Suggestions dropdown -->
                    <div id="suggestionsWrapper" class="position-absolute bg-white rounded-3 shadow mt-2 w-100" style="z-index: 1000; display: none;">
                        <div class="d-flex justify-content-between align-items-center px-3 py-2 border-bottom">
                            <span class="fw-semibold text-secondary">Suggestions</span>
                            <button type="button" id="closeSuggestions" class="btn btn-sm btn-light border"><i class="bi bi-x-lg"></i></button>
                        </div>
                        <ul id="suggestions" class="list-group list-group-flush mb-0"></ul>
                    </div>
                </div>

                <!-- Category Filter -->
                <div class="col-md-3">
                    <select id="filterCategory" class="form-select shadow-sm border-0">
          <option value="">All Categories</option>
          <% itemCategories.forEach(cat => { %>
            <option value="<%= cat.itemCategoryName %>"><%= cat.itemCategoryName %></option>
          <% }) %>
        </select>
                </div>

                <!-- Supplier Filter -->
                <div class="col-md-3">
                    <select id="filterSupplier" class="form-select shadow-sm border-0">
          <option value="">All Suppliers</option>
          <% itemSuppliers.forEach(sup => { %>
            <option value="<%= sup.supplierName %>"><%= sup.supplierName %></option>
          <% }) %>
        </select>
                </div>
            </div>
        </div>

        <!-- Navigation Buttons -->
        <div class="d-flex flex-wrap justify-content-center gap-3 mb-4">
            <a class="btn btn-primary shadow-sm" href="/items/inwards"><i class="bi bi-box-arrow-in-down"></i> Inwards</a>
            <a class="btn btn-secondary shadow-sm" href="/items/outwards"><i class="bi bi-box-arrow-up"></i> Outwards</a>
            <a class="btn btn-warning shadow-sm text-white" href="/items/transactions"><i class="bi bi-clock-history"></i> Transactions</a>
            <a class="btn btn-info shadow-sm text-white" href="/items/insights"><i class="bi bi-graph-up"></i> Insights</a>
        </div>

        <!-- 🗂️ Item Grid -->
        <h3 class="text-center fw-bold mb-4 text-dark">All Inventory Items</h3>
        <div id="itemsGrid" class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            <% items.forEach(item => { %>
                <div class="col item-card" data-category="<%= item.itemCategoryName %>" data-supplier="<%= item.itemSupplier %>">
                    <div class="card h-100 border-0 shadow-sm hover-shadow transition">
                        <% if (item.itemImage && item.itemImage.length > 0) { %>
                            <img src="data:image/<%= item.itemImage[0].contentType %>;base64,<%= item.itemImage[0].data.toString('base64') %>" alt="<%= item.itemName %>" class="card-img-top p-3 rounded" style="height: 230px; object-fit: contain; background-color: #f8f9fa;">
                            <% } else { %>
                                <img src="https://via.placeholder.com/400x300.png?text=No+Image" class="card-img-top p-3 rounded" style="height: 230px; object-fit: contain; background-color: #f8f9fa;">
                                <% } %>

                                    <div class="card-body">
                                        <h5 class="card-title fw-semibold">
                                            <%= item.itemName %>
                                        </h5>
                                        <p class="card-subtitle text-muted mb-2">
                                            <%= item.itemCategoryName %>
                                        </p>
                                        <p class="card-text small text-secondary">
                                            <%= item.itemDescription %>
                                        </p>
                                    </div>

                                    <ul class="list-group list-group-flush small">
                                        <li class="list-group-item"><strong>Supplier:</strong>
                                            <%= item.itemSupplier %>
                                        </li>
                                        <li class="list-group-item"><strong>Quantity:</strong>
                                            <%= item.itemQty %>
                                                <%= item.itemUnit %>
                                        </li>
                                        <li class="list-group-item"><strong>Daily Req.:</strong>
                                            <%= item.life %>
                                                <%= item.itemUnit %>
                                        </li>
                                        <li class="list-group-item"><strong>Added:</strong>
                                            <%= item.formattedItemDate %>
                                        </li>
                                    </ul>

                                    <div class="card-body text-end">
                                        <a href="/items/<%= item._id %>/edit" class="btn btn-outline-info btn-sm me-1"><i class="bi bi-pencil-square"></i> Edit</a>
                                        <form action="/items/<%= item._id %>?_method=DELETE" method="POST" class="d-inline">
                                            <button class="btn btn-outline-danger btn-sm"><i class="bi bi-trash"></i> Delete</button>
                                        </form>
                                    </div>
                    </div>
                </div>
                <% }) %>
        </div>
    </div>

    <!-- Scroll Buttons -->
    <div style="position: fixed; bottom: 20px; right: 20px; z-index: 1050;">
        <button onclick="scrollToTop()" class="btn btn-outline-primary rounded-circle shadow mb-2"><i class="bi bi-arrow-up"></i></button><br>
        <button onclick="scrollToBottom()" class="btn btn-outline-primary rounded-circle shadow"><i class="bi bi-arrow-down"></i></button>
    </div>
    <div id="bottom"></div>

    <!-- Scripts -->
    <script>
        const searchInput = document.getElementById("itemSearch");
        const suggestionsBox = document.getElementById("suggestions");
        const suggestionsWrapper = document.getElementById("suggestionsWrapper");
        const closeBtn = document.getElementById("closeSuggestions");
        const filterCategory = document.getElementById("filterCategory");
        const filterSupplier = document.getElementById("filterSupplier");
        const itemCards = document.querySelectorAll(".item-card");

        // 🔍 Live Search Suggestions
        searchInput.addEventListener("input", () => {
            const query = searchInput.value.trim();
            if (query.length < 1) {
                suggestionsWrapper.style.display = "none";
                filterItems();
                return;
            }

            fetch(`/items/suggestions?q=${encodeURIComponent(query)}`)
                .then(res => res.json())
                .then(suggestions => displaySuggestions(suggestions, query))
                .catch(console.error);

            filterItems();
        });

        function displaySuggestions(suggestions, query) {
            suggestionsBox.innerHTML = "";
            if (!suggestions.length) {
                suggestionsBox.innerHTML = `<li class="list-group-item text-muted">No results found</li>`;
                suggestionsWrapper.style.display = "block";
                return;
            }

            const regex = new RegExp(`(${query})`, "ig");
            suggestions.forEach(item => {
                const li = document.createElement("li");
                li.className = "list-group-item list-group-item-action";
                const highlighted = item.itemName.replace(regex, "<mark>$1</mark>");
                li.innerHTML = `${highlighted}<br><small class="text-muted">${item.itemCategoryName || ""}</small>`;
                li.addEventListener("click", () => {
                    searchInput.value = item.itemName;
                    suggestionsWrapper.style.display = "none";
                    document.getElementById("itemSearchForm").submit();
                });
                suggestionsBox.appendChild(li);
            });
            suggestionsWrapper.style.display = "block";
        }

        closeBtn.addEventListener("click", () => (suggestionsWrapper.style.display = "none"));
        document.addEventListener("click", e => {
            if (!e.target.closest("#suggestionsWrapper") && e.target !== searchInput)
                suggestionsWrapper.style.display = "none";
        });

        // 🧭 Filters
        filterCategory.addEventListener("change", filterItems);
        filterSupplier.addEventListener("change", filterItems);

        function filterItems() {
            const searchVal = searchInput.value.toLowerCase();
            const catVal = filterCategory.value.toLowerCase();
            const supVal = filterSupplier.value.toLowerCase();

            itemCards.forEach(card => {
                const name = card.querySelector(".card-title").textContent.toLowerCase();
                const category = card.dataset.category.toLowerCase();
                const supplier = card.dataset.supplier.toLowerCase();

                const match =
                    (!searchVal || name.includes(searchVal)) &&
                    (!catVal || category === catVal) &&
                    (!supVal || supplier === supVal);

                card.style.display = match ? "" : "none";
            });
        }

        function scrollToTop() {
            window.scrollTo({
                top: 0,
                behavior: "smooth"
            });
        }

        function scrollToBottom() {
            document.getElementById("bottom").scrollIntoView({
                behavior: "smooth"
            });
        }
    </script>

    <!-- Styles -->
    <style>
        .hover-shadow:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1) !important;
        }
        
        .transition {
            transition: all 0.3s ease;
        }
        
        mark {
            background-color: #fff3cd;
            padding: 0 2px;
            border-radius: 2px;
        }
    </style>